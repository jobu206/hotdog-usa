{"version":3,"sources":["Components/Jumbotron/index.js","Components/Navbar/index.js","Components/AboutUs/index.js","Components/Footer/index.js","App.js","serviceWorker.js","index.js"],"names":["Jumbotron","className","Component","Navbar","to","type","data-toggle","data-target","aria-controls","aria-expanded","aria-label","AboutUs","FOOTER","App","basename","Boolean","window","location","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"2XAeeA,G,uLAVX,OACE,yBAAKC,UAAU,6BACb,yBAAKA,UAAU,mB,GAJCC,cCwBTC,G,MAvBA,WACb,OACI,yBAAKF,UAAU,2BACb,kBAAC,IAAD,KACE,kBAAC,IAAD,CAAMA,UAAU,0BAA0BG,GAAG,KAA7C,gBAIF,4BACEH,UAAU,gCACVI,KAAK,SACLC,cAAY,WACZC,cAAY,sBACZC,gBAAc,qBACdC,gBAAc,QACdC,aAAW,qBAEX,0BAAMT,UAAU,4BC+BXU,G,MAjDC,WACd,OACE,yBAAKV,UAAU,mBACb,wBAAIA,UAAU,gCAAd,YACA,6BACA,wBAAIA,UAAU,oBAAd,qBACA,mVAOA,wBAAIA,UAAU,oBAAd,qBACA,+EACmD,4CAAqB,IADxE,OAEM,6CAEN,2BACE,0CADF,ovBAaA,2BACE,yCADF,wUAQA,kRC7BSW,G,MAVA,WACX,OACI,4BAAQX,UAAU,mCACd,yBAAKA,UAAU,aACX,0BAAMA,UAAU,eAAhB,8CCeDY,E,iLAXX,OACE,kBAAC,IAAD,CAAQC,SAAS,gBACf,kBAAC,EAAD,MACA,kBAAC,EAAD,MACA,kBAAC,EAAD,MACA,kBAAC,EAAD,W,GAPUZ,aCGEa,QACW,cAA7BC,OAAOC,SAASC,UAEe,UAA7BF,OAAOC,SAASC,UAEhBF,OAAOC,SAASC,SAASC,MACvB,2DCZNC,IAASC,OAAO,kBAAC,EAAD,MAASC,SAASC,eAAe,SD2H3C,kBAAmBC,WACrBA,UAAUC,cAAcC,MAAMC,KAAK,SAAAC,GACjCA,EAAaC,iB","file":"static/js/main.a6375ae4.chunk.js","sourcesContent":["import React, { Component } from \"react\";\nimport \"./style.css\";\n\nclass Jumbotron extends Component {\n  render() {\n    return (\n      <div className=\"jumbotron jumbotron-fluid\">\n        <div className=\"container\">\n          \n        </div>\n      </div>\n    );\n  }\n}\n\nexport default Jumbotron;\n","import React from \"react\";\nimport { BrowserRouter as Router, Link } from \"react-router-dom\";\nimport \"./style.css\";\n\nconst Navbar = () => {\n  return(\n      <nav className=\"navbar navbar-expand-lg\">\n        <Router>\n          <Link className=\"navbarText navbar-brand\" to=\"/\">\n            Hot Dog USA\n          </Link>\n        </Router>\n        <button\n          className=\"navbar-toggler custom-toggler\"\n          type=\"button\"\n          data-toggle=\"collapse\"\n          data-target=\"#navbarNavAltMarkup\"\n          aria-controls=\"navbarNavAltMarkup\"\n          aria-expanded=\"false\"\n          aria-label=\"Toggle navigation\"\n        >\n          <span className=\"navbar-toggler-icon\"></span>\n        </button>\n      </nav>\n  )\n}\n\nexport default Navbar;\n","import React from \"react\";\nimport \"./style.css\";\n\nconst AboutUs = () => {\n  return (\n    <div className=\"container pt-10\">\n      <h1 className=\"text-center font-weight-bold\">About Us</h1>\n      <hr />\n      <h3 className=\"font-weight-bold\">Mission Statement</h3>\n      <p>\n        The Hot Dog USA Jump Rope Team is dedicated to the promotion of the\n        sport of jump rope as a life-long physical fitness activity. Our purpose\n        is to inspire, motivate and educate people of all ages, while fostering\n        local, regional, national and international jump rope competitions,\n        workshops and performances.\n      </p>\n      <h3 className=\"font-weight-bold\">Team Organization</h3>\n      <p>\n        We have two levels of participation on our team, <b>\"Junior Team\"</b>{\" \"}\n        and <b>\"Elite Team\".</b>\n      </p>\n      <p>\n        <b>Junior Team</b> is for jumpers who are new to the sport but are\n        interested in learning jump rope performance and competition skills in a\n        fun, supportive environment. Junior Team jumpers participate in 3 to 4\n        local events each year. Junior team is geared for jumpers in 1st through\n        4th grade, although we have had jumpers in Kindergarten and also jumpers\n        in 5th and 6th grade on the Junior Team. Elite Team is for jumpers who\n        have taken jump rope classes and/or taken part in the Junior Team and\n        are interested in becoming more serious about the sport of jump rope.\n        The Elite Team participates in many performances, camps, and workshops.\n        As jumpers gain skill and maturity, they will also have the chance to\n        represent the team at events nationally and internationally.\n      </p>\n      <p>\n        <b>Elite Team</b> jumpers are generally 4th grade and older. We divide\n        the Elite team into smaller groups for administrative purposes, usually\n        based on age groups. We have A, B, and C teams. Each team group has a\n        group representative who attends team board meetings, collects fees and\n        paperwork, and facilitates communications for the group.\n      </p>\n\n      <p>\n        All team members are required to take specially designed “jump rope\n        gymnastics” classes. Among our staff, we have one director, Christi\n        Hartman, who is qualified to teach, spot, and develop our jumpers\n        through gymnastics training.\n      </p>\n    </div>\n  );\n};\n\nexport default AboutUs;\n","import React from 'react';\nimport './style.css';\n\nconst FOOTER = () => {\n    return (\n        <footer className=\"footer text-center mt-auto py-3\">\n            <div className=\"container\">\n                <span className=\"text-center\">&copy;2019 CrashLabs All Rights Reserved</span>\n            </div>\n        </footer>\n    )\n}\n\nexport default FOOTER;","import React, { Component } from \"react\";\nimport \"./App.css\";\nimport { BrowserRouter as Router } from \"react-router-dom\";\nimport Jumbotron from \"./Components/Jumbotron\";\nimport Navbar from \"./Components/Navbar\";\nimport AboutUs from \"./Components/AboutUs\";\n// import Events from \"./Components/Events\";\nimport FOOTER from \"./Components/Footer\";\n\nclass App extends Component {\n  render() {\n    return (\n      <Router basename=\"/hotdoug-usa\">\n        <Navbar />\n        <Jumbotron />\n        <AboutUs />\n        <FOOTER />\n      </Router>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}